apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: graildient-descent
data:
  nginx.conf: |
    worker_processes 1;

    events {
        worker_connections 1024;
    }

    http {
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging settings
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Gzip Settings
        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # API Service
        server {
            listen 80;
            server_name api.graildient-descent.local;

            # API requests
            location /api/ {
                proxy_pass http://api:8000/api/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # API docs
            location /docs {
                proxy_pass http://api:8000/docs;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            # Redoc
            location /redoc {
                proxy_pass http://api:8000/redoc;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            # OpenAPI schema
            location /openapi.json {
                proxy_pass http://api:8000/openapi.json;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            # Health check
            location = /health {
                proxy_pass http://api:8000/api/health;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
        }

        # Streamlit Frontend
        server {
            listen 80;
            server_name app.graildient-descent.local;

            # CORS headers for S3 content
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

            location / {
                proxy_pass http://streamlit:8501/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # WebSocket support for Streamlit
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_read_timeout 86400;
            }

            # Handle Streamlit static files
            location /_stcore/ {
                proxy_pass http://streamlit:8501/_stcore/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_cache_bypass $http_upgrade;
                proxy_cache_valid 200 1d;
                expires 1d;
                add_header Cache-Control "public, max-age=86400";
            }
        }

        # Celery Flower UI
        server {
            listen 80;
            server_name flower.graildient-descent.local;

            location / {
                proxy_pass http://celery-flower:5555;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }
